function solution(number) {
  const ch = Array.from({ length: number + 1 }, () => 0);
  const DFS = (v) => {
    if (v === number + 1) {
      let str = "";
      for (let i = 1; i <= number; i++) {
        if (ch[i] === 1) str += i + " ";
      }
      console.log(str);
    } else {
      ch[v] = 1;
      DFS(v + 1);
      ch[v] = 0;
      DFS(v + 1);
    }
  };
  DFS(1);
}
console.time();
console.log(solution(3));
console.timeEnd();
// [[1, 79]]
// // [0, 1, 0, 0]
// [[1, 79], [2, 79]]
// // [0, 1, 1, 0]
// [[1, 79], [2, 79], [3, 79]]
// // [0, 1, 1, 1]
// [[1, 79], [2, 79], [3, 79], [4, 71]] // 1 2 3
// // [0, 1, 1, 1]
// [[1, 79], [2, 79], [3, 81]]
// // [0, 1, 1, 0]
// [[1, 79], [2, 79], [3, 81], [4, 71]] // 1 2
// // [0, 1, 1, 0]
// [[1, 79], [2, 81]]
// // [0, 1, 0, 0]
// [[1, 79], [2, 81], [3, 79]]
// // [0, 1, 0, 1]
// [[1, 79], [2, 81], [3, 79], [4, 71]] // 1 3
// // [0, 1, 0, 1]
// [[1, 79], [2, 81], [3, 81]]
// // [0, 1, 0, 0]
// [[1, 79], [2, 81], [3, 81], [4, 71]] // 1
// // [0, 1, 0, 0]
// [[1, 81]]
// // [0, 1, 0, 0]
// [[1, 81], [2, 79]]
// // [0, 0, 1, 0]
// [[1, 81], [2, 79], [3, 79]]
// // [0, 0, 1, 1]
// [[1, 81], [2, 79], [3, 79], [4, 71]] // 2 3
// // [0, 0, 1, 1]
// [[1, 81], [2, 79], [3, 81]]
// // [0, 0, 1, 0]
// [[1, 81], [2, 79], [3, 81], [4, 71]] // 2
// // [0, 0, 1, 0]
// [[1, 81], [2, 81]]
// // [0, 0, 0, 0]
// [[1, 81], [2, 81], [3, 79]]
// // [0, 0, 0, 1]
// [[1, 81], [2, 81], [3, 79], [4, 71]] // 3
// // [0, 0, 0, 1]

// answer = [[1,2,3], [1,2], [1,3], [1], [2,3], [2], [3]]
